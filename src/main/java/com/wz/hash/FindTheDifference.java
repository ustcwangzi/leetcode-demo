package com.wz.hash;

/**
 * You are given two strings s and t.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Return the letter that was added to t.
 *
 * Example 1:
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.
 *
 * Example 2:
 * Input: s = "", t = "y"
 * Output: "y"
 *
 * Example 3:
 * Input: s = "a", t = "aa"
 * Output: "a"
 *
 * Constraints:
 * 1. 0 <= s.length <= 1000
 * 2. t.length == s.length + 1
 * 3. s and t consist of lower-case English letters.
 */
public class FindTheDifference {
    public static void main(String[] args) {
        System.out.println(findTheDifference("abc", "abcd"));
        System.out.println(findTheDifference("a", "aa"));
    }

    /**
     * t 比 s 多了一个元素，使用数组 count 统计 s 和 t 中字符的个数，对于 t 中的元素次数累加，对于 s 中的元素次数减少
     * 最后，count 中只会留下一个次数为 1 的元素，就是最终的结果
     */
    public static char findTheDifference(String s, String t) {
        int[] count = new int[26];
        for (int i = 0; i < s.length(); i++) {
            count[t.charAt(i) - 'a']++;
            count[s.charAt(i) - 'a']--;
        }
        count[t.charAt(t.length() - 1) - 'a']++;

        for (int i = 0; i < count.length; i++) {
            if (count[i] == 1) {
                return (char) (i + 'a');
            }
        }
        return 0;
    }
}
